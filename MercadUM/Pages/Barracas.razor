@page "/{Url}/Barracas"


@using DataAccessLibrary
@using DataAccessLibrary.Model



@inject IUtilizadoresData _dbu
@inject IBarracasData _dbb
@inject IFeirasData _dbf
@inject NavigationManager NavigationHelper

<h3>Barracas</h3>
@if (barracas is null)
{
    <p><em>A carregar...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Nome</th>
                <th>Descrição</th>
                <th>Vendedor</th>
                <th>Feira</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var barraca in barracas)
            {

                    <tr>
                        <td>@barraca.Nome</td>
                    <td>@barraca.Descricao </td>
                    <td>@GetVendedor(barraca.Id_Vendedor).Nome</td>
                </tr>
                
            }
        </tbody>
    </table>
}


@code {
    private List<BarracaModel> barracas;
    private List<UtilizadorModel> utilizadores;
    private FeiraModel feira;

    protected override async Task OnInitializedAsync()
    {
        barracas = await _dbb.GetBarracas();
        utilizadores = await _dbu.GetUtilizadores();

    }

    protected override void OnInitialized()
    {
        if (barracas is null) Url = "NonExistentPage";
        else
        {
            foreach(BarracaModel b in barracas)
            {
                Url = feira.Nome;
            }
        }
    }

    public UtilizadorModel GetVendedor(string id)
    {
        foreach (var vendedor in utilizadores)
        {
            if (vendedor.isVendedor(vendedor))
            {
                if (vendedor.Id_Utilizador == id)
                {
                    return vendedor;
                }
            }
        }
        return null;
    }

    public List<BarracaModel> GetBarracas(FeiraModel feira)
    {
        List<BarracaModel> ret = new List<BarracaModel>();
        if (feira is null)
        {
            return null;
        }
        else
        {
            foreach(BarracaModel b in feira.Barracas)
            {
                if (b.Id_Feira == feira.Id_Feiras)
                {
                    ret.Add(b);
                }
            }
            return ret;
        }
        return null;
    }

    

    [Parameter]
    public string Url {get; set;}

}
