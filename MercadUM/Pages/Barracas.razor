@page "/Barracas/{UrlFeira}/"


@using DataAccessLibrary
@using DataAccessLibrary.Model
@using Microsoft.AspNetCore.Http.Extensions;



@inject IUtilizadoresData _dbu
@inject IBarracasData _dbb
@inject IFeirasData _dbf
@inject NavigationManager UriHelper

<h3>Barracas</h3>
@if (barracas is null)
{
    <p><em>A carregar...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Nome</th>
                <th>Descrição</th>
                <th>Vendedor</th>
                <th>Feira</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var barraca in GetBarracas())
            {

                    <tr>
                      <button @onclick="() => Navigate(barraca)"> @barraca.Nome </button>
                        <td>@barraca.Nome</td>
                    <td>@barraca.Descricao </td>
                    <td>@GetVendedor(barraca.Id_Vendedor).Nome</td>
                </tr>
                
            }
        </tbody>
    </table>
}


@code {

    private List<BarracaModel> barracas;
    private List<UtilizadorModel> utilizadores;
    private FeiraModel feira;


    [Parameter]
    public string UrlFeira { get; set; }

    public FeiraModel GetFeira (List<FeiraModel> feiras, string NomeFeira ) {
        foreach (var f in feiras)
        {
            System.Diagnostics.Debug.WriteLine(NomeFeira + "-------------------" + f.Nome);
            if (f.Nome == NomeFeira)
            {

                return f;
            }
        }
        return null;
    }



    protected override async Task OnInitializedAsync()
    {
        feira = GetFeira(await _dbf.GetFeiras(), UrlFeira);
        barracas = await _dbb.GetBarracas();
        utilizadores = await _dbu.GetUtilizadores();

    }

    public UtilizadorModel GetVendedor(string id)
    {
        foreach (var vendedor in utilizadores)
        {
            if (vendedor.isVendedor(vendedor))
            {
                if (vendedor.Id_Utilizador == id)
                {
                    return vendedor;
                }
            }
        }
        return null;
    }

    public List<BarracaModel> GetBarracas()
    {
        List<BarracaModel> ret = new List<BarracaModel>();
        foreach (var b in barracas)
        {
            if (b.Id_Feira == feira.Id_Feiras)
            {
                ret.Add(b);
            }
        }
        return ret;
  
    }

    void Navigate(BarracaModel b)
    {


        UriHelper.NavigateTo(UrlBarraca(b));


    }

    string UrlBarraca(BarracaModel b)
    {
        return "/Produtos/"  + b.Nome;
    }



}
