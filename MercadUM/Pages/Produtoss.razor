@*@page "/{UrlBarracas}/Produtos/"*@


@using DataAccessLibrary
@using DataAccessLibrary.Model
@using MercadUM.Data;
@using Microsoft.AspNetCore.Http.Extensions
@using Microsoft.AspNetCore.Identity;


@inject IUtilizadoresData _dbu
@inject IBarracasData _dbb
@inject IFeirasData _dbf
@inject IProdutosData _dbp
@inject NavigationManager UriHelper


<style>
    .text-break-line-2 {
        height: 50px;
    }
    .text-break-line-2 {
        overflow: hidden;
        text-overflow: ellipsis;
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        padding: 1px 0px;
        text-align: left;
    }
    img {
        max-width: 100%;
    }
    img {
        vertical-align: middle;
        border-style: none;
    }
    .rounded-xl {
        border-radius: 12px !important;
    }
    .shadow {
        box-shadow: 0 0.5rem 1rem rgb(0 0 0 / 15%) !important;
    }
    .overflow-hidden {
        overflow: hidden !important;
    }
    .border {
        border: 1px solid #dee2e6 !important;
    }
</style>

@if (produtos is null)
{
        <p><em>A carregar...</em></p>
}
else
{      

           @foreach (var produto in GetProdutos())
            {

                    <div class="container">
                        <div class="row">
                        <div class="col-12 mb-3"><h4>Produtos</h4></div>
                                <div class="card-body-x">
                                    <div class="row my-2">
                                        <div class="col-sm-6 col-md-4 col-xl-3 mb-5">
                                            <div class="item rounded-xl overflow-hidden shadow border">
                                                <div class="px-3 pt-6">
                                                    <div class="image">
                                                        <img class="image" src="@ImagemProduto(produto)" />
                                                    </div>
                                                    <div class="mt-6">
                                                        <div class="row d-flex align-items-center mb-4">
                                                            <div class="col-8 pr-0">
                                                                <Button Class="primary rounded-0 w-100" @onclick="() => Navigate(produto)"> @produto.Nome </Button>
                                                            </div>
                                                            <div class="col-4">
                                                                <h5 class="text-right m-0">@produto.Preco€</h5>
                                                            </div>
                                                        </div>
                                                        <p class="text-break-line-2">
                                                            @produto.Descricao
                                                        </p>
                                                    </div>
                                                </div>
                                                <Button Class="primary rounded-0 w-100"> <i class="fas fa-shopping-cart mr-2"></i> Adicionar ao Carrinho</Button>
                                            </div>
                                        </div>
                                </div>
                      </div>
                      </div>          
                </div>
            }
}


@code {

    private List<ProdutoModel> produtos;
    private List<UtilizadorModel> utilizadores;
    private BarracaModel barraca;

    [Parameter]
    public string UrlBarracas { get; set; }

    public BarracaModel GetBarracas(List<BarracaModel> barracas, string NomeBarraca)
    {

        foreach (var b in barracas )
        {
            System.Diagnostics.Debug.WriteLine(b.Id_Barraca + "-------------------" + b.Nome);
            if (b.Nome == NomeBarraca)
            {

                return b;
            }
        }
        return null;
    }



    protected override async Task OnInitializedAsync()
    {
        barraca = GetBarracas(await _dbb.GetBarracas(), UrlBarracas);
        produtos = await _dbp.GetProdutos();
        utilizadores = await _dbu.GetUtilizadores();

    }

    public UtilizadorModel GetVendedor(string id)
    {
        foreach (var vendedor in utilizadores)
        {
            if (vendedor.isVendedor(vendedor))
            {
                if (vendedor.Id_Utilizador == id)
                {
                    return vendedor;
                }
            }
        }
        return null;
    }

    
    public List<ProdutoModel> GetProdutos()
    {
        List<ProdutoModel> ret = new List<ProdutoModel>();
        foreach (var p in produtos)
        {
            if (p.Id_Barraca == barraca.Id_Feira)
            {
                ret.Add(p);
            }
        }
        return ret;

    }
    
    void Navigate(ProdutoModel p)
    {

        UriHelper.NavigateTo(UrlProduto(p));


    }

    string UrlProduto(ProdutoModel p)
    {
        return p.Nome;
    }


    string ImagemProduto(ProdutoModel p)
    {
        return "./images/produtos/" + p.Nome + ".jpg";
    }



}
