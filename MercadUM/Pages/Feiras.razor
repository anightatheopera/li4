@page "/Feiras"

@using MercadUM.Areas.Feiras.Pages.Manage;
@using MercadUM.Areas.Identity.Pages.Account;
@using MercadUM.Model;


@inject IAdicionarFeiraModel _dbf
@inject IRegisterModel _dbu
@inject NavigationManager UriHelper


<h3>Feiras</h3>
@if (feiras is null)
{
    <p><em>A carregar...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Nome</th>
                <th>Descrição</th>
                <th>Data de início</th>
                <th>Data de fim</th>
                <th>Número de barracas</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var feira in feiras)
            {
                <tr>
                    <td>
                        <button @onclick="() => Navigate(feira)"> @feira.Nome </button>
                    </td>
                    <td>@feira.Descricao</td>
                    <td>@feira.Data_inicio</td>
                    <td>@feira.Data_fim</td>
                    <td>@feira.N_Barracas</td>
                    
                </tr>
            }
        </tbody>
    </table>
}


@code {
    private List<ApplicationFeira> feiras;
    private List<ApplicationUser> utilizadores;

    protected override async Task OnInitializedAsync()
    {
        feiras = await _dbf.GetFeiras();

    }

    public ApplicationUser? GetOrganizador(string id)
    {
        foreach (var organizador in utilizadores)
        {
            if (organizador.TipoDeConta == "1" && organizador.Id == id)
            {
                return organizador;
            }
        }
        return null;
    }

    void Navigate(ApplicationFeira f)
    {

            UriHelper.NavigateTo(UrlFeira(f));
    }

    string UrlFeira(ApplicationFeira f)
    {
        return f.Nome + "/Barracas/";
    }

}
